//  v1.1.0 (2019/03/30) by Tristano Ajmone
// *****************************************************************************
/* Highlight Theme for C++ -- "Base16 Atelier Sulphurpool" by Bram de Haan */
// *****************************************************************************
@import 'base16-atelier-sulphurpool';

$HL-CanvasBG:           $base07;
$HL-Default:            $base02;

$HL-Border:             $base06;
$HL-LangHover:          $HL-Default;

$HL-LineNum:            $base03;

$HL-Number:             $base09;
$HL-Escape:             $base09;
$HL-Interpolation:      $base0E;
$HL-String:             $base0B;
$HL-StringPreProc:      $HL-String;
$HL-PreProcessor:       $base0F;
$HL-Comment:            $base04;
$HL-Operator:           $base01;

$HL-Keywords1:          $base08;
$HL-Keywords2:          $base0C;
$HL-Keywords3:          $base0D;
$HL-Keywords4:          $base0E;

.listingblock code[data-lang=cpp]::before{
    // Color of language name (shown when hovering)
    color: $HL-LangHover;
}
.listingblock pre[class=highlight][lang=cpp] {
    background-color: $HL-CanvasBG;
    &>code {
        color: $HL-Default;
        font-family: $FiraCode;
    }
    border-color: $HL-Border;
    .hl {
        color: $HL-Default;

        &.num {
            // Numbers
            // -------
            color: $HL-Number;
        }
        &.esc {
            // Escape sequences
            // ----------------
            // In C++ these are: $p, $n, $i, $t, $a, $l, $v and $$.
            color: $HL-Escape;
        }
        &.ipl {
            // Interpolation sequences
            // -----------------------
            // In C++ these are: $<n>, $+<n>, $0<n>, $-<n>, $!<n> and $o.
            color: $HL-Interpolation;
        }
        &.str {
            // Strings
            // -------
            color: $HL-String;
        }
        &.ppc {
            // Preprocessor directives
            // -----------------------
            color: $HL-PreProcessor;
        }
        &.pps {
            // Strings within preprocessor directives
            color: $HL-StringPreProc;
        }
        &.slc, &.com {
            // Comments (single-line & block)
            // ------------------------------
            color: $HL-Comment;
            font-style: italic;
        }
        &.lin {
            // Line numbers
            // ------------
            color: $HL-LineNum;
        }
        &.opt {
            // Operators
            // ---------
            color: $HL-Operator;
        }
        // ---------------------
        //    Keywords Groups
        // ---------------------
        // &.kwa, &.kwb, &.kwc, &.kwd, &.kwe, &.kwf {
        //     font-weight: normal;
        // }
        &.kwa {
            // Keywords group 1
            // ----------------
            // C++ keywords.
            color: $HL-Keywords1;
        }
        &.kwb {
            // Keywords group 2
            // ----------------
            // C++ data types.
            color: $HL-Keywords2;
        }
        &.kwc {
            // Keywords group 3
            // ----------------
            // "typedef", "explicit", "extern", etc.
            color: $HL-Keywords3;
        }
        &.kwd {
            // Keywords group 4
            // ----------------
            // Functions names.
            color: $HL-Keywords4;
            font-weight: bold;
        }
    }

}

// EOF //
