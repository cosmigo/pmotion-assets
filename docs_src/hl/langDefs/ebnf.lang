--[[****************************************************************************
*                                                                              *
*                       Custom EBNF Syntax Definition                          *
*                                                                              *
*               v1.0.0 (2019/03/30) | Highlight v3.49 | Lua 5.3                *
*                                                                              *
*                              by Tristano Ajmone                              *
*                                                                              *
********************************************************************************
Associated file extensions: none
Syntax type: EBNF (Extended Backusâ€“Naur form)
--------------------------------------------------------------------------------
This is a tweaked variation of my `ebnf2.lang` definition included in Highlight
package. Created specifically to target EBNF blocks in the EA-IFF-85 document
in the Pro Motion Assets project:
    https://github.com/tajmone/pmotion-assets
--------------------------------------------------------------------------------
Written by Tristano Ajmone:
    <tajmone@gmail.com>
    https://github.com/tajmone
Released into the public domain according to the Unlicense terms:
    http://unlicense.org/
------------------------------------------------------------------------------]]
Description="EBNF"

Categories = {"protocol"}

IgnoreCase=false
EnableIndentation=false
---------------------------------------------------------------------------------
-- DISABLE/OVERRIDE UNUSED SYNTAX ELEMENTS
---------------------------------------------------------------------------------
NEVER_MATCH_RE=[=[ \A(?!x)x ]=] -- A Never-Matching RegEx!

Digits=NEVER_MATCH_RE -- Numbers are just text in EBNF!

Identifiers=NEVER_MATCH_RE -- Highlight's default Identifiers RegEx prevents
-- capturing the Epsilon operator ('_'). Since in this syntax, all identifiers
-- are defined as RegEx Keywords, and because we don't use any Keywords lists,
-- we may as well disable Identifiers by defining them as a never-matching RegEx.
-- NOTE: Defining Identifiers as a never-matching RegEx prevents using Kewyords
--       lists (the parser will fail to capture them).

-- ==============================================================================
--                                    COMMENTS
-- ==============================================================================
-- Lua style double-hyphens "--" delimiter.
Comments={
  -- Define SINGLE-LINE-COMMENTS delimiter
  { Block = false,
    Delimiter = { [=[ \-\- ]=] }
  }
}


-- =============================================================================
--                                   STRINGS
-- =============================================================================
Strings={
  ------------------------------------------------------------------------------
  --                            STRING DELIMITERS
  ------------------------------------------------------------------------------
  -- Only double quotes as string delimiter: "...STRING..."
  Delimiter=[=[ " ]=],
--[[----------------------------------------------------------------------------
                                ESCAPE SEQUENCES
  ------------------------------------------------------------------------------
  Suppress Escape sequences via Never-Matching RegEx                       --]]
  Escape=NEVER_MATCH_RE
}
--[[============================================================================
                                    OPERATORS
    ============================================================================
    ::=   :=    :   ;   ^   .   ,   _   |   +   -   *   >   <   \
    >>  <<  (   )   [   ]   {   }

--]]
Operators=[=[ :|=|\^|\.|\*|\+|-|>|<|\(|\)|\[|]|\{|}|\||,|;|_|\\ ]=]
-- =============================================================================
--                                   KEYWORDS
-- =============================================================================
  ------------------------------------------------------------------------------
  --                           Symbol Being Defined
  ------------------------------------------------------------------------------
Keywords={
  { Id=1,
    Regex=[=[ ([A-Z][A-Za-z0-9]*)\b(?= +::?=) ]=],
    Group=1
  },
  ------------------------------------------------------------------------------
  --                           Non-Terminal Symbol
  ------------------------------------------------------------------------------
  -- Must beging with a capital letter; must not be preceded or followed by a "-"
  -- (to prevent capturing RegEx ranges like "A-Z" )
  { Id=2,
    Regex=[=[ (?<!-)([A-Z][A-Za-z0-9]*)\b(?!-) ]=],
    Group=1
  },
}
--[[============================================================================
                                      CHANGELOG
================================================================================
v1.0.0 (2019/03/30) | Highlight v3.49)
  - First release. Created by modifying "ebnf2.lang" (v1.0.1):
    - Replace OCaml comments delimiter with single line '--' delimiter.
--]]
